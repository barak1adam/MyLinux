first  - as a reminder - read the email I sent to Guy and Kester

status files are under MyLinux and then in Documents/XO-126 on Windows and Linux


read what's app from Baruch, I had same kernel panic in ST

immediately open a ticket to Guy for the Xilinx support - need to debug the eth port, nor, kernel panic.

status Thursday:

I had a working u-boot - it was built outside petalinux and with a working u-boot.dtb.
the dtb is generated from zynqmp-zcu100-revC.dts - the default for my board
I changed this DTS by taking changes from ~/xg108.dts
I took the settings for gem3 and got the ETH working !

it is active but no ping.

it is important always for the u-boot to make sure the new DTS is really build:
make clean
make <defconfig>
make DEVICE-TREE=
make

status Friday:

I tried to use the DTS files generated by petalinux DTG (in /components/plnx_workspace/device-tree/devicetree/)
they are generated according to my XSA

I was still using the same name - zynqmp-zcu100-revC.dts
but I replace its content with the petalinux system-top and copied all required dtsi files

with that dtb I had eth working but I lost the uart again.

reminder - it is all about the DTB. once I have a correct DTB all will work, no need to change code.

in my outside u-boot - /tmp/u-boot-xlnx - I have 2 branches - one with with my working DTS of Thursday and the other changes are under 2022.1 branch
I copied it to ~ for backup

Actually I tried to make the NOR working today, I didnt get it working

- need to repeat the baremetal test for NOR
- try to adapt settingsf for the NOR from xg108 and from DTG (I tried today, do it again easily)

I want to check how a new XSA is affecting the dts files under /components/plnx_workspace/device-tree/devicetree/
make it a git and check it again after petalinux-config --get-hw-description=/home/barak/xilinx-zcu102-2022.1/17EG/system_wrapper.xsa and petalinux-build

-I2C in DTS - kester asked if I have any MUX connected to my I2C

Reminders:

my u-boot outside petalinux was not working and was hang because it was missing platform-top.h file that is generated by petalinux 
once I added it to the u-boot defconfig file, it started to work !

petalinux not just add platform-top.h but also changed text_base to 0x10080000
versus 0x8000000 in zynqmp_virt_defconfig


some xg108 settings I found and tried today:
xg108 working uart settings

				uart0-default {
					phandle = <0x1e>;

					mux {
						groups = "uart0_0_grp";
						function = "uart0";
					};

					conf {
						groups = "uart0_0_grp";
						slew-rate = <0x1>;
						power-source = <0x1>;
						io-standard = <0x1>;
					};

					conf-rx {
						pins = "MIO26";
						bias-high-impedance;
					};

					conf-tx {
						pins = "MIO27";
						bias-disable;
					};
				};

				uart1-default {
					phandle = <0x1f>;

					mux {
						groups = "uart1_0_grp";
						function = "uart1";
					};

					conf {
						groups = "uart1_0_grp";
						slew-rate = <0x1>;
						power-source = <0x1>;
						io-standard = <0x1>;
					};

					conf-rx {
						pins = "MIO28";
						bias-high-impedance;
					};

					conf-tx {
						pins = "MIO29";
						bias-disable;
					};
				};
				
				
				
xg108 working qspi settings				

		spi@ff0f0000 {
			u-boot,dm-pre-reloc;
			compatible = "xlnx,zynqmp-qspi-1.0";
			status = "okay";
			clock-names = "ref_clk", "pclk";
			interrupts = <0x0 0xf 0x4>;
			interrupt-parent = <0x4>;
			num-cs = <0x1>;
			reg = <0x0 0xff0f0000 0x0 0x1000 0x0 0xc0000000 0x0 0x8000000>;
			#address-cells = <0x1>;
			#size-cells = <0x0>;
			#stream-id-cells = <0x1>;
			iommus = <0xd 0x873>;
			power-domains = <0xc 0x2d>;
			clocks = <0x3 0x35 0x3 0x1f>;
			phandle = <0x74>;

			flash@0 {
				compatible = "spi-flash", "jedec,spi-nor";
				#address-cells = <0x1>;
				#size-cells = <0x1>;
				reg = <0x0>;
				spi-tx-bus-width = <0x1>;
				spi-rx-bus-width = <0x4>;
				spi-max-frequency = <0x2faf080>;
			};
		};

other:

	aliases {
		ethernet0 = "/axi/ethernet@ff0e0000";
		gpio0 = "/axi/gpio@ff0a0000";
		i2c1 = "/axi/i2c@ff030000";
		rtc0 = "/axi/rtc@ffa60000";
		serial0 = "/axi/serial@ff000000";
		serial1 = "/axi/serial@ff010000";
		serial2 = "/dcc";
		spi0 = "/axi/spi@ff040000";
		spi1 = "/axi/spi@ff050000";
		usb0 = "/axi/usb0@ff9d0000";
		usb1 = "/axi/usb1@ff9e0000";
	};

	chosen {
		bootargs = "earlycon";
		stdout-path = "serial0:115200n8";
	};

	memory@0 {
		device_type = "memory";
		reg = <0x0 0x0 0x0 0x80000000>;
	};

Reminder:
=========
Alan (China) said u-boot is easy, just the dts and defconfig, nothing else is critical.

Reminder:
=========
I tried to boot also the kernel by: petalinux-boot --jtag --kernel
it has a panic error like I had with ST NiDPlug
try to find it in the emails with Baruch, maybe it is related to the rootfs and the bootargs (and not to the kernel itself)


[    1.248482] Run /init as init process
[    1.252249] Failed to execute /init (error -13)
[    1.256792] Run /sbin/init as init process
[    1.260957] Run /etc/init as init process
[    1.265011] Run /bin/init as init process
[    1.269077] Run /bin/sh as init process
[    1.272954] Kernel panic - not syncing: No working init found.  Try passing init= option to kernel. See Linux Documentation/admin-guide/init.rst for guidance.
[    1.287120] CPU: 3 PID: 1 Comm: swapper/0 Not tainted 5.15.19-xilinx-v2022.1 #1
[    1.294421] Hardware name: ZynqMP XG126 (DT)
[    1.298682] Call trace:
[    1.301119]  dump_backtrace+0x0/0x190
[    1.304784]  show_stack+0x18/0x30
[    1.308090]  dump_stack_lvl+0x7c/0xa0
[    1.311744]  dump_stack+0x18/0x34
[    1.315051]  panic+0x14c/0x30c
[    1.318098]  kernel_init+0x120/0x130
[    1.321665]  ret_from_fork+0x10/0x20
[    1.325235] SMP: stopping secondary CPUs
[    1.329152] Kernel Offset: disabled
[    1.332629] CPU features: 0x00001001,00000842
[    1.336978] Memory Limit: none
[    1.340018] ---[ end Kernel panic - not syncing: No working init found.  Try passing init= option to kernel. See Linux Documentation/admin-guide/init.rst for guidance. ]-
				

What to do when I back:

1. get a working u-boot - with working NOR and working ETH ! ETH is mor important than NOR
for the NOR, guy suggested to try low clock fo 20Mhz
continue with my current working DTS or try to move to DTG from scratch
if moving to DTG, first need to get to the same status of today

2. try to use the same dtb for the kernel.
try to load only the kernel from the Vitis without the petalinux-command, maybe it won't look for rootfs and wont panic
maybe advise Kester what is the best way to boot kernel
I dont care about the rootfs because it will be AOS

3. once I have working u-boot and kernel images, start working with Maoz on the AOS building blocks

4. try to download FPGA
Check UART with FPGA download


further minor tasks:
===================== 

5. make sure I understand the fact that u-boot and kernel are using the same DTS /DTB but u-boot ignore many settings
that the kernel is handling. u-boot does much less than the kernel. Kester explained it in the last call.

6. still need to understand boot.scr

7. complete bb-example-lt for peatalinux


Reminer: next interface to bring up:
Maoz will need the following interfaces: SPI (for CPLD), I2C(for EEPROM), MDIO for Q Phys

further readings and things to complete
---------------------------------------

-xsct command line  - including reset and jtag frequency commands
-device trees
-learn autools

				
				
Reminder:
=========
I had once that the petlinux kernel was not up becuase it was too minimal, it was missing /dev/* (at least by googling... )
the minimal image name for reproducing this issue was: petalinux-image-minimal
in petalinux-config

Answers from kester:
is bl31.elf is mandatory ?? yes

I want to download FPGA example and small bit file. can I generate it myself? yes but it always more or less the smae size 

if i have some bin file compiled for ARM, that was built out of Vitis (by our application guys), and I want to load it and run it from XSCT "dow", but I don't have it in ELF format with all the linker info... how can I use it? just download to to some address and run? do you have an example?
must have the elf file to download it using XSCT, the linker info is MUST !



