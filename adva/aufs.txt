Hi,

My name is Barak and I am working as an Embedded Linux Kernel engineer for MRV Communications.
We are having embedded routers based on a custom distribution on top of Linux 3.10.
We've used AUFS for few years, both in our legacy and latest routers.
Our use case of AUFS is a classical union of few folders under our EXT4 root filesystem (etc, home/admin,...) with 
corresponding RW folders that we are creating under TMPFS filesystem during system startup.

We are facing the following issue in all routers:
================================================
Running thousands of "configuration save" to our AUFS config union, the save operation keep doing successfully but
we are having the following error messages of AUFS:
---------------------------------------------------
aufs au_xino_do_write:414:ssys[1548]: I/O Error, write failed (-28)
aufs au_xino_do_write:414:cp[14185]: I/O Error, write failed (-28)
aufs au_xino_write:450:cp[14185]: I/O Error, write failed (-5)
aufs au_xino_do_write:414:ssys[1548]: I/O Error, write failed (-28)
aufs au_xino_write:450:ssys[1548]: I/O Error, write failed (-5) 

where ssys[PID] and cp[PID] are some processes running on our system.

I don't have right now a "df" snapshot, but I was able to reproduce those error messages
by making the underlying RW TMPFS branch out of space.

Reading again the full AUFS user manual on the AUFS home page, I am having some questions:
==========================================================================================
1.The section of "External Inode Number Bitmap, Translation Table and Generation Table (xino)" 
is not so clear to us. Could you please re-explain shortly what is the purpose of xino files in AUFS and 
what might be the impact of using the mount option of "noxino" ?
Please note that our CONFIG_AUFS_EXPORT is disabled.

2. as a solution I am considering the following options:
-- using mount option of "noxino"
-- using mount option of truncating xino upon errors or periodically every few thoushands of "save" actions.
-- using mount option of "xino=filename" to locate the xino files on some other TMPFS point where memory is not limited.
Our current underlying RW TMPFS branch, which is the default path for the xino files, is limited to 10M.
-- applying tmpfs-idr.patch:
  Keeps the tmpfs inode number as the lowest value. Effective to reduce
  the size of aufs XINO files for tmpfs branch. Also it prevents the
  duplication of inode number, which is important for backup tools and
  other utilities. When you find aufs XINO files for tmpfs branch
  growing too much, try this patch. 

We will be very thankful to have your advice.

Thanks,
Barak.
